server:
  port: ${PORT:8081}
  servlet:
    context-path: /

is:
  base-url: ${IS_PROTOCOL:http}://${IS_HOST:localhost}:${IS_PORT:8080}/auth
  realm: ${IS_REALM:tui-pilotes}
  realm-url: ${is.base-url}/realms/${is.realm}
  client-id: tui-gateway
  client-secret: 8JNumTbP0pj8iYoCNgrycb3srA4jBHly

spring:
  data:
    rest:
      basePath: /
      detection-strategy: ANNOTATED
  jpa:  
    show-sql: true
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${is.realm-url}/protocol/openid-connect/certs
      client:
        registration:
          tui:
            client-id: ${is.client-id}
            client-secret: ${is.client-secret}
            provider: keycloak
            authorization-grant-type: authorization_code
            scope: openid, profile
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
        provider:
          keycloak:
            authorization-uri: ${is.realm-url}/protocol/openid-connect/auth
            jwk-set-uri: ${is.realm-url}/protocol/openid-connect/certs
            user-info-uri: ${is.realm-url}/protocol/openid-connect/userinfo
            token-uri: ${is.realm-url}/protocol/openid-connect/token
            user-name-attribute: preferred_username
  main:
    orders: 
      orderable_quantity: 
      - 5
      - 10
      - 15
      price: "1.33"
      closed_after_seconds: 300
springdoc:
  show-login-endpoint: true
  swagger-ui:
    oauth:
      clientId: ${is.client-id}
      clientSecret: ${is.client-secret}


